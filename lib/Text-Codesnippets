/*--------------------------------- Problem mit TypeAheadField ---*/
/// in "Pubspeck.yaml" deaktiviert:
/// flutter_typeahead: ^4.0.0
// flutter_keyboard_visibility: ^5.0.0

// das ganze Widget "WbTypeAheadField" deaktiviert:
// import 'package:flutter_typeahead/flutter_typeahead.dart';

// in "ExpenseWidget" deaktiviert:
// WbTypeAheadField "Was wurde eingekauft?"

// /*--------------------------------- *** ---*/
 
//              decoration: BoxDecoration(
//               border: Border.all(
//                 color: wbColorLogoBlue,
//                 width: 1,
//               ),
//               borderRadius: BorderRadius.circular(16),
//             ),

//  /*--------------------------------- *** ---*/
//  Decoration in einem Container:
//              decoration: BoxDecoration(
//               color: wbColorBackgroundRed,
//               borderRadius: BorderRadius.circular(16),
//               border: Border.all(
//                 color: wbColorLogoBlue,
//                 width: 1,
//               ),
//             ),
//  /*--------------------------------- *** ---*/
//           /*--------------------------------- Wo wurde eingekauft? 0631 ---*/
//           Container(
//             decoration: BoxDecoration(
//               color: wbColorBackgroundRed,
//               borderRadius: BorderRadius.circular(16),
//               border: Border.all(
//                 color: wbColorLogoBlue,
//                 width: 1,
//               ),
//             ),

//             /*--------------------------------- DropdownSearch ---*/
//             child: Row(
//               children: [
//                 Padding(
//                   padding: const EdgeInsets.fromLTRB(16, 0, 16, 0),
//                   child: Icon(
//                     Icons.shopping_cart_outlined,
//                     size: 28,
//                   ),
//                 ),
//                 Expanded(
//                   child: DropdownSearch<String>(
//                     key: dropDownKey,

//                     /*--------------------------------- decoratorProps ---*/
//                     decoratorProps: DropDownDecoratorProps(
//                       decoration: InputDecoration(
//                         labelText: 'Wo wurde eingekauft?',
//                         labelStyle: TextStyle(
//                           fontSize: 20,
//                           fontWeight: FontWeight.bold,
//                           color: wbColorButtonBlue,
//                         ),

//                         hintText: 'Geschäft / Lieferant',
//                         hintStyle: TextStyle(
//                           fontSize: 12,
//                           fontWeight: FontWeight.bold,
//                           color: wbColorButtonBlue,
//                         ),

//                         filled: true,
//                         fillColor: wbColorBackgroundRed,

//                         // border: OutlineInputBorder(
//                         //   borderRadius: BorderRadius.circular(16),
//                         //   borderSide: BorderSide(
//                         //     color: Colors.black,
//                         //     width: 1,
//                         //   ),
//                         // ),

//                         enabledBorder: OutlineInputBorder(
//                           borderRadius: BorderRadius.circular(16),
//                           borderSide: BorderSide(
//                             color: Colors.black,
//                             width: 1,
//                           ),
//                         ),

//                         // focusedBorder: OutlineInputBorder(
//                         //   borderRadius: BorderRadius.circular(16),
//                         //   borderSide: BorderSide(
//                         //     color: wbColorButtonBlue,
//                         //     width: 1,
//                         //   ),
//                         // ),

//                         // errorBorder: OutlineInputBorder(
//                         //   borderRadius: BorderRadius.circular(16),
//                         //   borderSide: BorderSide(
//                         //     color: wbColorButtonBlue,
//                         //     width: 1,
//                         //   ),
//                         // ),

//                         // focusedErrorBorder: OutlineInputBorder(
//                         //   borderRadius: BorderRadius.circular(16),
//                         //   borderSide: BorderSide(
//                         //     color: wbColorButtonBlue,
//                         //     width: 1,
//                         //   ),
//                         // ),

//                         /*--------------------------------- Icon im Suchfeld des Auswahlmenüs ---*/
//                         prefixIcon: Padding(
//                           padding: const EdgeInsets.fromLTRB(16, 0, 16, 0),
//                           child: Icon(
//                             Icons.shopping_cart_outlined,
//                             color: Colors.black,
//                             size: 32,
//                           ),
//                         ),

//                         // /*--------------------------------- IconButton für "Neues Geschäft hinzufügen" im Suchfeld des Auswahlmenüs ---*/
//                         // suffixIcon: IconButton(
//                         //   icon: Icon(
//                         //     Icons.add_circle, //delete_forever,
//                         //     color: wbColorButtonBlue,
//                         //     size: 52,
//                         //     semanticLabel: 'Neues Geschäft hinzufügen',
//                         //   ),
//                         //   onPressed: () {
//                         //     log('0700 - ExpenseWidget - "Wo wurde eingekauft?" - Neues Geschäft hinzufügen');
//                         //     //shopController.clear();
//                         //   },

//                       ),
//                     ),
//                     /*--------------------------------- dropdownBuilder ---*/
//                     dropdownBuilder: (context, selectedItem) {
//                       return Text(
//                         selectedItem ?? "Bitte ein Geschäft auswählen",
//                         style: TextStyle(
//                           fontSize: 20,
//                           fontWeight: FontWeight.bold,
//                         ),
//                         maxLines: null, // Zeilenumbruch ermöglichen
//                         // overflow: TextOverflow.ellipsis, // Textüberlauf zeigt "..." an
//                       );
//                     },

//                     /*--------------------------------- selectedItem ---*/
//                     selectedItem: shopController.text.isEmpty
//                         ? "Bitte ein Geschäft auswählen"
//                         : shopController.text,
//                     items: (filter, loadProps) async {
//                       /*--------------------------------- Datenbank öffnen ---*/
//                       final database =
//                           await openDatabase('JOTHAsoft.FiveStars.db');

//                       /*--------------------------------- Datenbankabfrage ---*/
//                       final results = await database.rawQuery(
//                           'SELECT TKD_Feld_014, TKD_Feld_006, TKD_Feld_007, TKD_Feld_005 FROM KundenDaten WHERE TKD_Feld_014 IS NOT NULL AND TRIM(TKD_Feld_014) != ""');

//                       /*--------------------------------- Ergebnisse übermitteln ---*/
//                       return results
//                           .map((row) =>
//                               '${row['TKD_Feld_014']} • ${row['TKD_Feld_006']} ${row['TKD_Feld_007']} • ${row['TKD_Feld_005']}')
//                           .toList();
//                     },

//                     /*--------------------------------- PopupProps ---*/
//                     popupProps: PopupProps.menu(
//                       showSelectedItems: true,
//                       /*--------------------------------- Suchfunktion ---*/
//                       showSearchBox: true,
//                       /*--------------------------------- TextFieldProps - ANFANG ---*/
//                       searchFieldProps: TextFieldProps(
//                         /*--------------------------------- Auswahlmenü - InputDecoration ---*/
//                         decoration: InputDecoration(
//                           /*--- Hintergrundfarbe des Suchfeldes im Auswahlmenü ---*/
//                           filled: true,
//                           fillColor: wbColorButtonDarkRed,

//                           /*--- Textfarbe des Suchfeldes im Auswahlmenü ---*/
//                           labelText: 'Hier suchen:',
//                           labelStyle: TextStyle(
//                             fontSize: 20,
//                             fontWeight: FontWeight.bold,
//                             color: Colors.white,
//                           ),
//                           hintText: 'Geschäft / Lieferant',
//                           hintStyle: TextStyle(
//                             fontSize: 12,
//                             fontWeight: FontWeight.bold,
//                             color: Colors.white,
//                           ),

//                           /*--- Icon im Suchfeld des Auswahlmenüs ---*/
//                           prefixIcon: Padding(
//                             padding: const EdgeInsets.fromLTRB(16, 0, 16, 0),
//                             child: Icon(
//                               Icons.search,
//                               color: Colors.white,
//                               size: 52,
//                             ),
//                           ),

//                           /*--- IconButton für "Neues Geschäft hinzufügen" im Suchfeld des Auswahlmenüs ---*/
//                           suffixIcon: IconButton(
//                             icon: Icon(
//                               Icons.add_circle, //delete_forever,
//                               color: Colors.white, size: 52,
//                               semanticLabel: 'Neues Geschäft hinzufügen',
//                             ),
//                             onPressed: () {
//                               log('0700 - ExpenseWidget - "Wo wurde eingekauft?" - Neues Geschäft hinzufügen');
//                               //shopController.clear();
//                             },
//                           ),
//                         ),

//                         /*--- Cursor im Suchfeld des Auswahlmenüs ---*/
//                         cursorColor: Colors.yellow,
//                         cursorWidth: 5.0,
//                         cursorHeight: 30.0,

//                         /*--- Text im Suchfeld des Auswahlmenüs ---*/
//                         style: TextStyle(
//                           fontSize: 28,
//                           fontWeight: FontWeight.bold,
//                           color: Colors.yellow,
//                         ),
//                       ),
//                       /*--------------------------------- TextFieldProps - ENDE ---*/
//                       menuProps: MenuProps(
//                         borderRadius: BorderRadius.circular(0),
//                         backgroundColor: wbColorLogoBlue,

//                         /*--- Schriftfarbe des Auswahlmenüs ---*/

//                         /*--- Schatten des Auswahlmenüs ---*/
//                         shadowColor: Colors.black,
//                         elevation: 12,

//                         /*--- Der Seiten-Hintergrund wird eingefärbt, solange das Menü geöffnet ist ---*/
//                         // barrierColor: wbColorLogoBlue,
//                         // barrierLabel: 'Suchfeld schließen',
//                         // semanticLabel: 'Suchfeld schließen',
//                         // barrierDismissible: true,
//                         // clipBehavior: Clip.none,
//                         // borderOnForeground: true,
//                         // color: Colors.yellow,
//                         // surfaceTintColor: Colors.yellow,
//                         // margin: EdgeInsets.all(0),
//                       ),

//                       /*--------------------------------- itemBuilder ---*/
//                       itemBuilder: (context, item, isDisabled, isSelected) =>
//                           Column(
//                         children: [
//                           ListTile(
//                             title: Text(
//                               item,
//                               style: TextStyle(
//                                 fontSize: 20,
//                                 fontWeight: FontWeight.bold,
//                                 color: Colors.white,
//                               ),
//                             ),
//                           ),
//                           Divider(color: Colors.white), // Divider hinzugefügt
//                         ],
//                       ),
//                     ),

//                     /*--------------------------------- onChanged ---*/
//                     onChanged: (String? newValue) {
//                       log('0659 - ExpenseWidget - "Wo wurde eingekauft?" - Ausgewählt: $newValue');
//                       setState(() {
//                         shopController.text = newValue ?? '';
//                       });
//                     },
//                   ),
//                 ),
//               ],
//             ),
//           ),
// /*--------------------------------- Wo wurde eingekauft? - ENDE ---*/
          
// /*--------------------------------- Daten in Datenbank einfügen auf Knopfdruck ---*/
//                                           TextButton(
//                                             child: Text('Ja'),
//                                             onPressed: () async {
//                                               final database =
//                                                   await openDatabase(
//                                                       'JOTHAsoft.FiveStars.db');
//                                               String newContactID =
//                                                   await generateContactID();
//                                               await database.insert(
//                                                 'KundenDaten',
//                                                 {
//                                                   /*--- Vorname ---*/
//                                                   'TKD_Feld_002':
//                                                       newShopController
//                                                               .text.isEmpty
//                                                           ? ''
//                                                           : newShopController
//                                                               .text,

//                                                   /*--- Nachname ---*/
//                                                   'TKD_Feld_003':
//                                                       newShopController
//                                                               .text.isEmpty
//                                                           ? ''
//                                                           : newShopController
//                                                               .text,

//                                                   /*--- Telefon ---*/
//                                                   'TKD_Feld_008':
//                                                       newShopController
//                                                               .text.isEmpty
//                                                           ? ''
//                                                           : newShopController
//                                                               .text,

//                                                   /*--- Firma ---*/
//                                                   'TKD_Feld_014':
//                                                       newShopController
//                                                               .text.isEmpty
//                                                           ? ''
//                                                           : newShopController
//                                                               .text,

//                                                   /*--- Kontakt-ID ---*/
//                                                   'TKD_Feld_030':
//                                                       newContactID,
//                                                 },
//                                                 conflictAlgorithm:
//                                                     ConflictAlgorithm.replace,
//                                               );
//                                               // ignore: use_build_context_synchronously
//                                               Navigator.of(context).pop();
//                                             },
//                                           ),
// /*--------------------------------- Daten in Datenbank einfügen auf Knopfdruck - ENDE ---*/
 
                                    // /*--------------------------------- E-Mail ---*/
                                    // if (contact.emails.isNotEmpty)
                                    //   Text('E-Mail: ${contact.emails.first.address}'),

                                    // /*--------------------------------- Geburtstag ---*/
                                    // if (contact.events.isNotEmpty)
                                    //   Text(
                                    //       'Geburtstag: ${contact.events.first.day.toString().padLeft(2, '0')}.${contact.events.first.month.toString().padLeft(2, '0')}.${contact.events.first.year}'),

                                    // /*--- Adresse - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.addresses.isNotEmpty)
                                    //   Text(
                                    //       'Adresse: ${contact.addresses.first.address}'),

                                    // /*--- Firma - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.organizations.isNotEmpty)
                                    //   Text(
                                    //       'Firma: ${contact.organizations.first.company}'),

                                    // /*--- Notiz - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.notes.isNotEmpty)
                                    //   Text('Notiz: ${contact.notes.first}'),

                                    // /*--- Webseite - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.websites.isNotEmpty)
                                    //   Text('Webseite: ${contact.websites.first.url}'),

                                    /*--- Social Media - funzt nicht richtig ---*/
                                    // if (contact.socialMedias.isNotEmpty)
                                    //   Text(
                                    //       'Social Media: ${contact.socialMedias.first.username}'),

                                    // /*--- Gruppen - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.groups.isNotEmpty)
                                    //   Text('Gruppen: ${contact.groups.first.name}'),

                                    // /*--- Accounts - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.accounts.isNotEmpty)
                                    //   Text(
                                    //       'Accounts: ${contact.accounts.first.name}'),

                                    // /*--- ContactID - hier deaktiviert wegen schnellerem Seitenaufbau ---*/
                                    // if (contact.id.isNotEmpty)
                                    //   Text(
                                    //       'ContactID: ${contact.id.isNotEmpty ? contact.id : 'Keine ContactID'}'),

                                    // Text('---------------------------------------'),
                                    /*--------------------------------- Auflistungen - Name ---*/
                                    // // Text('Name: ${contact.name}'),
                                    // Text('Vorname: ${contact.name.first}'),
                                    // Text('Nachname: ${contact.name.last}'),
                                    // Text('Präfix: ${contact.name.prefix}'),
                                    // Text('Suffix: ${contact.name.suffix}'),
                                    // Text('Mittlerer Name: ${contact.name.middle}'),
                                    // Text('Spitzname: ${contact.name.nickname}'),
                                    // Text(
                                    //     'Vornamens-Zeichen: ${contact.name.firstPhonetic}'),
                                    // Text(
                                    //     'Nachnamens-Zeichen: ${contact.name.lastPhonetic}'),
                                    // Text(
                                    //     'Mittleres Namezeichen: ${contact.name.middlePhonetic}'),

                                    /*--------------------------------- Auflistungen - Accounts ---*/
                                    // // Text('Accounts: ${contact.accounts}'),
                                    // Text(
                                    //     'Accounts first.rawId: ${contact.accounts.first.rawId}'),
                                    // Text(
                                    //     'Accounts first.name: ${contact.accounts.first.name}'),
                                    // Text(
                                    //     'Accounts first.type: ${contact.accounts.first.type}'),
                                    // Text(
                                    //     'Accounts first.mimetypes: ${contact.accounts.first.mimetypes}'),
                                    // // ---> es gibt auch noch "contact.accounts.single" und "contact.accounts.last"

                                    /*--------------------------------- Auflistungen - Adressen ---*/
                                    // Text('Adressen: ${contact.addresses}'),
                                    // Text(
                                    //     'Erste Adresse komplett: ${contact.addresses.first.address}'),
                                    // Text(
                                    //     'Erste Adresse Straße: ${contact.addresses.first.street}'),
                                    // Text(
                                    //     'Erste Adresse Stadt: ${contact.addresses.first.city}'),
                                    // Text(
                                    //     'Erste Adresse PLZ: ${contact.addresses.first.postalCode}'),
                                    // Text(
                                    //     'Erste Adresse Land: ${contact.addresses.first.country}'),
                                    // Text(
                                    //     'Erste Adresse CustomLabel: ${contact.addresses.first.customLabel}'),
                                    // Text(
                                    //     'Erste Adresse ISO-Land: ${contact.addresses.first.isoCountry}'),
                                    // Text(
                                    //     'Erste Adresse Label: ${contact.addresses.first.label}'),
                                    // Text(
                                    //     'Erste Adresse Neighborhood: ${contact.addresses.first.neighborhood}'),
                                    // Text(
                                    //     'Erste Adresse pobox: ${contact.addresses.first.pobox}'),
                                    // Text(
                                    //     'Erste Adresse Bundesland: ${contact.addresses.first.state}'),
                                    // Text(
                                    //     'Erste Adresse subAdminArea: ${contact.addresses.first.subAdminArea}'),
                                    // Text(
                                    //     'Erste Adresse subLocality: ${contact.addresses.first.subLocality}'),
                                    // Text(
                                    //     'Erste Adresse V-CARD: ${contact.addresses.first.toVCard()}'),
                                    // // ---> es gibt auch noch "contact.addresses.single" und "contact.addresses.last"

                                    /*--------------------------------- Auflistungen - E-Mails ---*/
                                    // Text('E-Mails: ${contact.emails}'),

                                    // if (contact.emails.isNotEmpty) ...[
                                    //   Text(
                                    //       'Erste E-Mail address: ${contact.emails.first.address}'),
                                    //   Text(
                                    //       'Erste E-Mail label: ${contact.emails.first.label}'),
                                    //   Text(
                                    //       'Erste E-Mail customLabel: ${contact.emails.first.customLabel}'),
                                    //                                       Text(
                                    //       'Erste E-Mail isPrimary: ${contact.emails.first.isPrimary}'),

                                    //   Text(
                                    //       'Erste E-Mail toVCard: ${contact.emails.first.toVCard()}'),
                                    // ],
                                    // // ---> es gibt auch noch "contact.emails.single" und "contact.emails.last"

                                    /*--------------------------------- Auflistungen - Events - Geburtstag ---*/
                                    // Text('Geburtstag: ${contact.events}'),
                                    // if (contact.events.isNotEmpty) ...[
                                    //   Text(
                                    //       'Geburtstag: ${contact.events.first.customLabel}'),
                                    //   Text(
                                    //       'Geburtstag first.day: ${contact.events.first.day}'),
                                    //   Text(
                                    //       'Geburtstag first.label: ${contact.events.first.label}'),
                                    //   Text(
                                    //       'Geburtstag first.month: ${contact.events.first.month}'),
                                    //   Text(
                                    //       'Geburtstag first.year: ${contact.events.first.year}'),
                                    //   Text(
                                    //       'Geburtstag first.toVCard: ${contact.events.first.toVCard()}'),
                                    // ],
                                    // // ---> es gibt auch noch "contact.events.single" und "contact.events.last"

                                    // /*--------------------------------- Auflistungen - Firmen ---*/
                                    // Text('Firmen: ${contact.organizations}'),
                                    // if (contact.organizations.isNotEmpty) ...[
                                    //   Text('Firmen: ${contact.organizations}'),
                                    //   Text(
                                    //       'Firmen first.company: ${contact.organizations.first.company}'),
                                    //   Text(
                                    //       'Firmen first.department: ${contact.organizations.first.department}'),
                                    //   Text(
                                    //       'Firmen first.jobDescription: ${contact.organizations.first.jobDescription}'),
                                    //   Text(
                                    //       'Firmen first.title: ${contact.organizations.first.title}'),
                                    //   Text(
                                    //       'Firmen first.jobDescription: ${contact.organizations.first.jobDescription}'),
                                    //   Text(
                                    //       'Firmen first.officeLocation: ${contact.organizations.first.officeLocation}'),
                                    //   Text(
                                    //       'Firmen first.symbol: ${contact.organizations.first.symbol}'),
                                    //   Text(
                                    //       'Firmen first.phoneticName: ${contact.organizations.first.phoneticName}'),
                                    //   Text(
                                    //       'Firmen first.toVCard: ${contact.organizations.first.toVCard()}'),
                                    // ],
                                    // // ---> es gibt auch noch "contact.organizations.single" und "contact.organizations.last"

                                    /*--------------------------------- Auflistungen - Gruppen ---*/
                                    // Text('Gruppen: ${contact.groups}'),
                                    // if (contact.groups.isNotEmpty) ...[
                                    //   Text('Gruppen first.id: ${contact.groups.first.id}'),
                                    //   Text('Gruppen first.name: ${contact.groups.first.name}'),
                                    //   Text(
                                    //       'Gruppen first.toString: ${contact.groups.first.toString()}'),
                                    //   Text('Gruppen single.id: ${contact.groups.single.id}'),
                                    //   Text('Gruppen single.name: ${contact.groups.single.name}'),
                                    //   Text(
                                    //       'Gruppen single.toString: ${contact.groups.single.toString()}'),
                                    //   Text('Gruppen last.id: ${contact.groups.last.id}'),
                                    //   Text('Gruppen last.name: ${contact.groups.last.name}'),
                                    //   Text(
                                    //       'Gruppen last.toString: ${contact.groups.last.toString()}'),
                                    // ]

                                    /*--------------------------------- Auflistungen - Notizen ---*/
                                    // Text('Notizen: ${contact.notes}'),
                                    // if (contact.notes.isNotEmpty) ...[
                                    //   Text('Notizen: ${contact.notes}'),
                                    //   Text(
                                    //       'Notizen first: ${contact.notes.first.note}'),

                                    //   Text(
                                    //       'Notizen first: ${contact.notes.first.toVCard()}'),
                                    // ]
                                    // // ---> es gibt auch noch "contact.notes.single" und "contact.notes.last"

                                    /*--------------------------------- Auflistungen - Telefonnummern ---*/
                                    // Text('Telefonnummern: ${contact.phones}'),
                                    // if (contact.phones.isNotEmpty) ...[
                                    // Text(
                                    //     '1. Telefonnummer customLabel: ${contact.phones.first.customLabel}'),
                                    // Text(
                                    //     '1. Telefonnummer isPrimary: ${contact.phones.first.isPrimary}'),
                                    // Text(
                                    //     '1. Telefonnummer label: ${contact.phones.first.label}'),
                                    // Text(
                                    //     '1. Telefonnummer normalizedNumber: ${contact.phones.first.normalizedNumber}'),
                                    // Text(
                                    //     '1. Telefonnummer number: ${contact.phones.first.number}'),
                                    // Text(
                                    //     '1. Telefonnummer toVCard: ${contact.phones.first.toVCard()}'),
                                    // Text(
                                    //     '2. Telefonnummer customLabel: ${contact.phones.last.customLabel}'),
                                    // Text(
                                    //     '2. Telefonnummer isPrimary: ${contact.phones.last.isPrimary}'),
                                    // Text(
                                    //     '2. Telefonnummer label: ${contact.phones.last.label}'),
                                    // Text(
                                    //     '2. Telefonnummer normalizedNumber: ${contact.phones.last.normalizedNumber}'),
                                    // Text(
                                    //     '2. Telefonnummer number: ${contact.phones.last.number}'),
                                    // Text(
                                    //     '2. Telefonnummer toVCard: ${contact.phones.last.toVCard()}'),
                                    // ]
                                    // // ---> es gibt auch noch "contact.phones.last"

                                    /*--------------------------------- Auflistungen - Soziale Medien ---*/
                                    // Text('Soziale Medien: ${contact.socialMedias}'),
                                    // if (contact.socialMedias.isNotEmpty) ...[
                                    //   Text(
                                    //       'Soziale Medien first.customLabel: ${contact.socialMedias.first.customLabel}'),
                                    //   Text(
                                    //       'Soziale Medien first.label: ${contact.socialMedias.first.label}'),
                                    //   Text(
                                    //       'Soziale Medien first.userName: ${contact.socialMedias.first.userName}'),
                                    //   Text(
                                    //       'Soziale Medien first,toVCard: ${contact.socialMedias.first.toVCard()}'),
                                    // ]
                                    // // ---> es gibt auch noch "contact.socialMedias.single" und "contact.socialMedias.last"

                                    /*--------------------------------- Auflistungen - Webseiten ---*/
                                    // Text('Webseiten: ${contact.websites}'),
                                    // if (contact.websites.isNotEmpty) ...[
                                    // Text(
                                    //     'Webseiten first.customLabel: ${contact.websites.first.customLabel}'),
                                    // Text(
                                    //     'Webseiten first.label: ${contact.websites.first.label}'),
                                    // Text(
                                    //     'Webseite: ${contact.websites.first.url}'),
                                    // Text(
                                    //     'Webseiten first.toString: ${contact.websites.first.toString()}'),
                                    // Text(
                                    //     'Webseiten first.toVCard: ${contact.websites.first.toVCard()}'),
                                    // ]
                                    // // ---> es gibt auch noch "contact.websites.single" und "contact.websites.last"


        //   if (controllerCS001.text != widget.contact['TKD_Feld_001'] ||
        //       controllerCS002.text != widget.contact['TKD_Feld_002'] ||
        //       controllerCS003.text != widget.contact['TKD_Feld_003'] ||
        //       controllerCS004.text != widget.contact['TKD_Feld_004'] ||
        //       controllerCS005.text != widget.contact['TKD_Feld_005'] ||
        //       controllerCS006.text != widget.contact['TKD_Feld_006'] ||
        //       controllerCS007.text != widget.contact['TKD_Feld_007'] ||
        //       controllerCS008.text != widget.contact['TKD_Feld_008'] ||
        //       controllerCS009.text != widget.contact['TKD_Feld_009'] ||
        //       controllerCS010.text != widget.contact['TKD_Feld_010'] ||
        //       controllerCS011.text != widget.contact['TKD_Feld_011'] ||
        //       controllerCS012.text != widget.contact['TKD_Feld_012'] ||
        //       controllerCS013.text != widget.contact['TKD_Feld_013'] ||
        //       controllerCS014.text != widget.contact['TKD_Feld_014'] ||
        //       controllerCS015.text != widget.contact['TKD_Feld_015'] ||
        //       controllerCS016.text != widget.contact['TKD_Feld_016'] ||
        //       controllerCS017.text != widget.contact['TKD_Feld_017'] ||
        //       controllerCS018.text != widget.contact['TKD_Feld_018'] ||
        //       controllerCS019.text != widget.contact['TKD_Feld_019'] ||
        //       controllerCS020.text != widget.contact['TKD_Feld_020'] ||
        //       controllerCS021.text != widget.contact['TKD_Feld_021'] ||
        //       controllerCS022.text != widget.contact['TKD_Feld_022'] ||
        //       controllerCS023.text != widget.contact['TKD_Feld_023'] ||
        //       controllerCS024.text != widget.contact['TKD_Feld_024'] ||
        //       controllerCS025.text != widget.contact['TKD_Feld_025'] ||
        //       controllerCS026.text != widget.contact['TKD_Feld_026'] ||
        //       controllerCS027.text != widget.contact['TKD_Feld_027'] ||
        //       controllerCS028.text != widget.contact['TKD_Feld_028'] ||
        //       controllerCS029.text != widget.contact['TKD_Feld_029'] ||
        //       controllerCS030.text != widget.contact['TKD_Feld_030']) {


// 0242
// /*--------------------------------- Daten aktualisieren ---*/
// Future<void> updateData(Map<String, dynamic> row) async {
//   if (controllerCS002.text.isEmpty || controllerCS003.text.isEmpty) {
//     showDialog(
//       context: context,
//       builder: (context) => AlertDialog(
//         title: Text("Fehler"),
//         content: Text("Vorname und Nachname dürfen nicht leer sein."),
//         actions: [
//           TextButton(
//             onPressed: () {
//               Navigator.of(context).pop();
//             },
//             child: Text("OK"),
//           ),
//         ],
//       ),
//     );
//     return;
//   }


// //0082
// /*--------------------------------- Daten speichern ---*/
// Future<void> saveData(BuildContext context) async {
//   if (controllerCS002.text.isEmpty || controllerCS003.text.isEmpty) {
//     showDialog(
//       context: context,
//       builder: (context) => AlertDialog(
//         title: Text("Fehler"),
//         content: Text("Vorname und Nachname dürfen nicht leer sein."),
//         actions: [
//           TextButton(
//             onPressed: () {
//               Navigator.of(context).pop();
//             },
//             child: Text("OK"),
//           ),
//         ],
//       ),
//     );
//     return;
//   }

//                             // log("1584 - ContactScreen - Daten speichern - geklickt");
//                             // if (controllerCS002.text.isEmpty || controllerCS003.text.isEmpty) {
//                             //   showDialog(
//                             //     context: context,
//                             //     builder: (context) => AlertDialog(
//                             //       title: Text("Fehler"),
//                             //       content: Text("Vorname und Nachname dürfen nicht leer sein."),
//                             //       actions: [
//                             //         TextButton(
//                             //           onPressed: () {
//                             //             Navigator.of(context).pop();
//                             //           },
//                             //           child: Text("OK"),
//                             //         ),
//                             //       ],
//                             //     ),
//                             //   );
//                             //   return;
//                             // }

//     // Setze den Fokus auf das leere Feld und scrolle zu dieser Position
//     if (controllerCS002.text.isEmpty) {
//       FocusScope.of(context).requestFocus(controllerCS002);
//       Scrollable.ensureVisible(
//         context,
//         duration: Duration(milliseconds: 300),
//         alignment: 0.5,
//       );
//     } else {
//       FocusScope.of(context).requestFocus(controllerCS003);
//       Scrollable.ensureVisible(
//         context,
//         duration: Duration(milliseconds: 300),
//         alignment: 0.5,
//       );
//     }

//       final FocusNode focusNodeCS002 = FocusNode();

/*--------------------------------- Firmendaten speichern ---*/
                                                  // 'TKD_Feld_013': '', // USt-IdNr.
                                                  // 'TKD_Feld_015': '', // IBAN
                                                  // 'TKD_Feld_016': '', // BIC
                                                  // 'TKD_Feld_017': '', // Bank
                                                  // 'TKD_Feld_018': '', // Kontoinhaber
                                                  // 'TKD_Feld_019': '', // Zahlungsbedingungen
                                                  // 'TKD_Feld_020': '', // Skonto
                                                  // 'TKD_Feld_021': '', // Lieferbedingungen
                                                  // 'TKD_Feld_022': '', // Lieferzeit
                                                  // 'TKD_Feld_023': '', // Lieferkosten
                                                  // 'TKD_Feld_024': '', // Lieferkostenfrei ab
                                                  // 'TKD_Feld_025': '', // Rabatt
                                                  // 'TKD_Feld_026': '', // Rabattgrund
                                                  // 'TKD_Feld_027': '', // Rabatt bis
                                                  // 'TKD_Feld_028': '', // Rabattgrund bis
                                                  // 'TKD_Feld_029': '', // Rabatt ab
                                                  // 'TKD_Feld_030': '', // Rabattgrund ab
                                                  // 'TKD_Feld_031': '', // Rabatt ab
                                                  // 'TKD_Feld_032': '', // Rabattgrund ab
// 'TKD_Feld_033': '', // Rabatt ab
                                       
// Um die fest programmierten Texte linksbündig und die Textinhalte der Controller rechtsbündig zu machen, kannst du die pw.Row - Widgets mit pw.Expanded - Widgets verwenden.
        
//               pw.Text('Wo eingekauft: ${shopController.text}'),
//               pw.Text('Was eingekauft: ${itemController.text}'),
//               pw.Text(
//                   'Menge und Einheit: ${quantityController.text} ${itemController.text}'),
//               pw.Text('Mehrwertsteuersatz: ${taxPercentController.text} %'),
//               pw.Text(
//                   'Netto Einzelpreis: ${nettoItemPriceController.text} EUR'),
//               pw.Text(
//                   'Netto Gesamtpreis: ${nettoQuantityPriceController.text} EUR'),
//               pw.Text(
//                   'MwSt. auf den Brutto-Einzelpreis: ${taxOnBruttoItemPriceController.text} EUR'),
//               pw.Text(
//                   'MwSt. auf den Brutto-Gesamtpreis: ${taxOnBruttoQuantityPriceController.text} EUR'),
//               pw.Text(
//                   'Brutto Einzelpreis: ${bruttoItemPriceController.text} EUR'),
//               pw.Text(
//                 'Brutto Gesamtpreis: ${bruttoQuantityPriceController.text} EUR',
//                 style: pw.TextStyle(
//                   fontSize: 18,
//                   fontWeight: pw.FontWeight.bold,
